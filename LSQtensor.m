function [q1_nm, q2_nm] = LSQtensor(Q_tt,Q_tp,M_inv,Mb_tt,Mb_tp)
% Harmonic transformation of a trace-less symmetric tensor for given 
% numerical components Q_tt, Q_tp in the least-squares sense
%
% INPUT:    Q_tt, Q_tp - Numerical components  of trace-less symmetric tensor
%           !!! The routine assumes the first and last values are those at
%           the poles !!!
%           M_inv, Mb_tt, Mb_tp - Matrices generated by ComputeMinvTens.m,
%           required to perform linear regression
%    
% OUTPUT:   Vector of mode coefficients q_nm = (q^(1)_lm, q^(2)_lm)
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%   Alexander Mietke, 05/19/2021
%   alexanmie@gmail.com
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    % Total number of modes used 
    N_modes = size(M_inv,2)/2 + 4;

    % Calculate source vector (leave out points at poles)
    b = Mb_tt*[Q_tt(2:end-1); Q_tt(2:end-1)] + Mb_tp*[Q_tp(2:end-1); Q_tp(2:end-1)];
    
    % Solve linear regression M*q_th = b
    q_nm = M_inv*b;
    
    % Arrange mode coefficients and fill in zeros for modes with l=0 and l=1
    q1_nm = [zeros([4,1]); q_nm(1:N_modes-4)];    % q^(1)_lm
    q2_nm = [zeros([4,1]); q_nm(N_modes-3:end)];  % q^(2)_lm
end